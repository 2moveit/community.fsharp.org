[
    {
        "key": "adt",
        "defs": [
            {
                "name": "Abstract Data Type",
                "description": "In computer science, an abstract data type (ADT) is a mathematical model for data types where a data type is defined by its behavior (semantics) from the point of view of a user of the data, specifically in terms of possible values, possible operations on data of this type, and the behavior of these operations."
            },            
            {
                "name": "Algebraic Data Type",
                "description": "A composite type that can be formed by combining other types.",
                "more": "https://fsharpforfunandprofit.com/posts/overview-of-types-in-fsharp/"
            }
        ]
    },
    {
        "key": "ce",
        "defs": [{
            "name": "Computation Expressions",
            "more": "https://docs.microsoft.com/en-us/dotnet/articles/fsharp/language-reference/computation-expressions",
            "description": "Computation expressions in F# provide a convenient syntax for writing computations that can be sequenced and combined using control flow constructs and bindings."
        }]
    },   
    {
        "key": "srtp",
        "defs": [{
            "name": "Statically Resolved Type Parameters",
            "more": "https://docs.microsoft.com/en-us/dotnet/articles/fsharp/language-reference/generics/statically-resolved-type-parameters",
            "description": "A statically resolved type parameter is a generic type parameter that is replaced with an actual type at compile time instead of at run time. They are preceded by a caret (^) symbol."
        }]
    }
]
